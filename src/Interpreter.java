import java.util.*; // Imporrting for my collection classes here.
import java.util.regex.*; // Need regular expressions for the code.


public class Interpreter {
    public static void main(String[] args) {

    }
    private Map<String, Integer> variables = new HashMap<>(); // This is where I am going to hold the variable names and integer values.
    private Set<String> initializedString = new HashSet<>(); // This is where I will store and keep track of initialized string variables.
    private List<Tokens> tokens = new ArrayList<>(); // Storing the tokens generated by parsing.
    private int pos = 0; // Represent position in the lists, used to iterate.

    private static class Tokens {
        String type; // Decide the type of the token, whether its a keyword, identifier, operator or whatever.
        String value; // Store the value of the token.
        Tokens(String type, String value) {
            this.type = type;
            this.value = value;
        }
        }

        private void tokenize(String program) throws SyntaxError {
        String tokenTypes =
                "(?<Numbers>0|[1-9]\\d*)|"+
                "(?<ID>[a-zA-Z_]\\w*)|"+
                        "(?<Assignment>=)|"+
                        "(?<Plus>\\+)|"+
                        "(?<Minus>-)|";
        Pattern tokenPattern = Pattern.compile(tokenTypes);
        Matcher match = tokenPattern.matcher(program);

        while (match.find()){
            if (match.group("Numbers") != null){
                String number = match.group("Numbers");
                if (number.startsWith("0")&& number.length()>1){
                    throw new SyntaxError("Invalid Number: " + number);
                }
                tokens.add(new Tokens("Number", number));
            }
        }
        }
        private void error(String message) throws SyntaxError {
            throw new SyntaxError(message);
        }
        private static class SyntaxError extends Exception {
            public SyntaxError(String message) {
                super(message);
            }
        }


}
